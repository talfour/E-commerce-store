version: '3.9'
services:
  backend:
    restart: unless-stopped
    build:
        context: .
        dockerfile: ./Docker/backend/Dockerfile
    entrypoint: /app/docker/server-entrypoint.sh
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
        - static_volume:/app/backend/django_static
    expose:
        - 8000
    environment:
        DEBUG: "True"
        CELERY_BROKER_URL: "redis://redis:6379/0"
        CELERY_RESULT_BACKEND: "redis://redis:6379/0"
        DJANGO_DB: postgresql
        POSTGRES_HOST: db
        POSTGRES_NAME: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_PORT: 5432
    depends_on:
      - db
      - redis


  frontend:
    build:
        context: .
        dockerfile: ./Docker/frontend/Dockerfile
    command: yarn start
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true


  worker:
      restart: unless-stopped
      build:
          context: .
          dockerfile: ./Docker/backend/Dockerfile
      entrypoint: /app/docker/worker-entrypoint.sh
      volumes:
          - static_volume:/app/backend/django_static
      environment:
          DEBUG: "True"
          CELERY_BROKER_URL: "redis://redis:6379/0"
          CELERY_RESULT_BACKEND: "redis://redis:6379/0"
          DJANGO_DB: postgresql
          POSTGRES_HOST: db
          POSTGRES_NAME: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
      depends_on:
          - backend
          - redis
  redis:
      restart: unless-stopped
      image: redis:7.0.5-alpine
      expose:
          - 6379
  db:
      image: postgres:12.0-alpine
      restart: unless-stopped
      volumes:
          - postgres_data:/var/lib/postgresql/data/
      environment:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      expose:
          - 5432

volumes:
    static_volume:
    postgres_data:
